---
// Filename: Card.astro
interface Props {
	title?: string;
	subtitle?: string | null;
	showSubtitle?: boolean;
	description?: string;
	classes?: string; // Prop para clases adicionales
	isAccordion?: boolean;
	id?: string;
}

const {
	title,
	subtitle,
	showSubtitle = false,
	description,
	classes,
	isAccordion = false,
	id,
} = Astro.props;
---

<article
	id={id}
	class:list={["Article", classes, { "is-accordion": isAccordion }]}>
	<header class="Article-header">
		<h2 class="Article-header__title">{title}</h2>
		{
			showSubtitle && subtitle && (
				<span class="Article-header__auxiliar">{subtitle}</span>
			)
		}
	</header>
	<div class="Article-description">
		<div class="Article-description__inner">
			<p>{description}</p>
		</div>
		<slot />
	</div>
</article>

<style lang="scss">
	.Article {
		padding: var(--size-5);
		border: solid 3px var(--border-strokes-color);
		border-radius: var(--border-radius-sm);
		display: flex;
		flex-flow: column nowrap;
		gap: var(--size-4);
		position: relative;
		margin-top: 1rem;

		&-header {
			margin-top: -40px;
			position: relative;
			height: 40px;
			@media (max-width: 768px) {
				height: auto;
			}

			&__title {
				background-color: var(--primary-color);
				color: white;
				width: fit-content;
				border-radius: var(--border-radius-md);
				padding-block: var(--size-1);
				padding-inline: var(--size-16);
				font-size: 1.2rem;
				font-weight: 400;
				text-transform: uppercase;
				position: absolute;
				z-index: 2;

				@media (max-width: 768px) {
					position: unset;
					padding: 0.3rem 1rem;
				}
			}

			&__auxiliar {
				background-color: var(--subtitle-background-color);
				position: absolute;
				color: white;
				bottom: 18px;
				margin-left: 100px;
				border-radius: var(--border-radius-md);
				font-size: var(--size-4);
				padding: 4px 1rem 4px 9rem;
				font-style: italic;

				@media (max-width: 768px) {
					position: inherit;
					z-index: 0;
					top: -7px;
					margin: 0;
					font-size: 0.9rem;
					padding: 0.5rem;
					line-height: 1.5;
					border-radius: 0;
					width: 100%;
					display: block;
					color: #999999;
					background-color: unset;
					font-weight: 700;
				}
			}
		}

		&-description {
			display: grid;
			gap: 0.5rem;

			&__inner {
				display: flex;
				flex-flow: column nowrap;
				gap: var(--size-4);
			}
		}

		&.is-accordion {
			.Article-header {
				cursor: pointer;
			}

			.Article-description {
				overflow: hidden;
				transition: max-height 0.3s ease-out;
				max-height: 0;
			}

			&.active .Article-description {
				max-height: 1000px;
			}
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const accordionCards = document.querySelectorAll(".Article.is-accordion");

		accordionCards.forEach((card) => {
			const header = card.querySelector(".Article-header");
			const description = card.querySelector(".Article-description");

			if (header && description) {
				header.addEventListener("click", () => {
					const isActive = card.classList.toggle("active");
					if (isActive) {
						(description as HTMLElement).style.maxHeight =
							`${description.scrollHeight}px`;
					} else {
						(description as HTMLElement).style.maxHeight = "0px";
					}
				});
			}
		});
	});
</script>
